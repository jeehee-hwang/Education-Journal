* MySQL 설치 및 SQL 기본 사용법 SELECT, ORDER BY 
* 수업 진도 깃허브 05_mysql/ 00 - 02

MySQL > 오타 조심!! 

* SQL에서 계정을 실수로 잘 못 만들었을 때는 사용자 제거를 하고 계정을 다시 생성해보도록 하자. 

계정 생성 후 데이터베이스 활용

-- 1) 새로운 계정 만들기
CREATE USER 'ohgiraffers'@'%' IDENTIFIED BY 'ohgiraffers';

-- 현재 존재하는 데이터베이스 확인
SHOW databases;

-- mysql 데이터베이스로 계정 정보 확인하기
USE mysql;

SELECT * FROM USER;

-- 2) 데이터베이스 생성 후 계정에 권한 부여
-- 데이터베이스(스키마) 생성
CREATE DATABASE menudb;

GRANT ALL PRIVILEGES ON menudb.* TO 'ohgiraffers'@'%';

SHOW GRANTS FOR 'ohgiraffers'@'%';

USE menudb;

> 계정을 생성할 때 오타를 조심해야 한다. 


MySQL에서  ,(쉼표)와 .(마침표)의 사용법 

* ,는 여러 개의 항목을 구분할 때 사용 

🔍 마침표 vs 쉼표 요약
| 구분 | 기호 | 역할 | 예시 |
| 마침표 | `.` | 데이터베이스, 테이블, 컬럼 구분 | `db1.users.name` |
| 쉼표 | `,` | 여러 항목 구분 | `SELECT name, age FROM users` |


/* SELECT */
/* SELECT절은 MYSQL의 가장 기본적인 명령어로
   특정 테이블에서 원하는 데이터를 조회해서 가져오는데 사용 된다. */
   
SELECT
       MENU_CODE
	 , MENU_NAME
     , MENU_PRICE
  FROM TBL_MENU;
  
SELECT * FROM TBL_MENU;

SELECT 6 + 3;
SELECT 6 * 3;
SELECT 6 % 3;

SELECT NOW();  /*NOW() > 현재 시간을 알려준*/

-- 컬럼 별칭
SELECT CONCAT('홍', '', '길동') AS name;

/* ORDER BY */
/* ORDER BY절은 SELECT문과 함께 사용하며 결과 집합을 특정 열이나
   열들의 값에 따라 정렬하는 데 사용한다.
*/
SELECT
       MENU_CODE
	 , MENU_NAME
     , MENU_PRICE
  FROM TBL_MENU
-- ORDER BY MENU_PRICE
 ORDER BY MENU_PRICE ASC;
 
SELECT 
       MENU_CODE
     , MENU_NAME
     , MENU_PRICE
  FROM TBL_MENU
 ORDER BY MENU_PRICE DESC; 
 
SELECT 
       MENU_CODE
     , MENU_NAME
     , MENU_PRICE
  FROM TBL_MENU
 ORDER BY MENU_PRICE DESC,
	      MENU_NAME ASC;
          
SELECT
       MENU_CODE
     , MENU_NAME
     , MENU_PRICE * MENU_CODE
  FROM TBL_MENU
 ORDER BY MENU_PRICE * MENU_CODE DESC;
 
SELECT 
       FIELD(ORDERABLE_STATUS, 'Y', 'N')
  FROM TBL_MENU;
  
SELECT
       MENU_NAME
     , ORDERABLE_STATUS
  FROM TBL_MENU
 ORDER BY FIELD(ORDERABLE_STATUS, 'N', 'Y'); 
 
-- 오름차순 시 NULL 처음으로
SELECT
       CATEGORY_CODE
     , CATEGORY_NAME
     , REF_CATEGORY_CODE
  FROM TBL_CATEGORY
 ORDER BY REF_CATEGORY_CODE;
 
-- 오름차순 시 NULL 마지막으로
SELECT
       CATEGORY_CODE
     , CATEGORY_NAME
     , REF_CATEGORY_CODE
  FROM TBL_CATEGORY
 ORDER BY REF_CATEGORY_CODE IS NULL;
 
-- 내림차순 시 NULL 마지막으로
SELECT
       CATEGORY_CODE
     , CATEGORY_NAME
     , REF_CATEGORY_CODE
  FROM TBL_CATEGORY
 ORDER BY REF_CATEGORY_CODE DESC; 
 
-- 내림차순 시 NULL 처음으로
SELECT
       CATEGORY_CODE
     , CATEGORY_NAME
     , REF_CATEGORY_CODE
  FROM TBL_CATEGORY
 ORDER BY REF_CATEGORY_CODE IS NULL DESC, REF_CATEGORY_CODE DESC;
